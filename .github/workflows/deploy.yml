name: CI/CD to EC2 via CodeDeploy (Docker Hub)

on:
  push:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-northeast-2
  IMAGE_NAME: yagu
  IMAGE_TAG: latest
  BUNDLE_NAME: deployment-${{ github.run_id }}.zip

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Dockerfile이 멀티스테이지로 bootJar 빌드
      - name: Build Docker image
        run: |
          set -euo pipefail
          docker build -t docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

      - name: Push Docker image
        run: |
          set -euo pipefail
          docker push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      # 배포 번들 생성 (compose 안의 ${DOCKERHUB_USERNAME} 치환 후 zip)
      - name: Prepare deployment bundle
        shell: bash
        run: |
          set -euo pipefail
          sed -i "s/\${DOCKERHUB_USERNAME}/${{ secrets.DOCKERHUB_USERNAME }}/g" deploy/docker-compose.ec2.yml
          zip -r "${BUNDLE_NAME}" deploy appspec.yml

      # GitHub OIDC → AWS AssumeRole
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload bundle to S3
        run: |
          set -euo pipefail
          aws s3 cp "${BUNDLE_NAME}" "s3://${{ secrets.S3_BUCKET }}/revisions/${BUNDLE_NAME}"

      - name: Register revision & Create deployment
        run: |
          set -euo pipefail
          APP_NAME="${{ secrets.CODEDEPLOY_APP_NAME }}"
          GROUP_NAME="${{ secrets.CODEDEPLOY_GROUP_NAME }}"
          BUCKET="${{ secrets.S3_BUCKET }}"
          KEY="revisions/${{ env.BUNDLE_NAME }}"

          # 애플리케이션 리비전 등록
          aws deploy register-application-revision \
            --application-name "$APP_NAME" \
            --s3-location bucket="$BUCKET",key="$KEY",bundleType=zip

          # 배포 생성
          aws deploy create-deployment \
            --application-name "$APP_NAME" \
            --deployment-group-name "$GROUP_NAME" \
            --s3-location bucket="$BUCKET",key="$KEY",bundleType=zip \
            --description "GitHub Actions deployment ${{ github.run_id }}"
